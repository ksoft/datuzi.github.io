<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2021/05/13/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>javaMail</title>
    <url>/2018/02/05/javamail/</url>
    <content><![CDATA[<p>JavaMail，顾名思义，提供给开发者处理电子邮件相关的编程接口。它是Sun发布的用来处理email的API。它可以方便地执行一些常用的邮件传输。我们可以基于JavaMail开发出类似于Microsoft Outlook的应用程序。</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="properties配置文件"><a href="#properties配置文件" class="headerlink" title="properties配置文件"></a>properties配置文件</h3><figure class="highlight ini"><table><tr><td class="code"><pre><code class="hljs ini"><span class="hljs-comment">#-------------邮件服务器信息-------------------</span><br><span class="hljs-attr">mail.smtp.auth</span>=<span class="hljs-literal">true</span><br><span class="hljs-attr">mail.smtp.timeout</span>=<span class="hljs-number">25000</span><br><span class="hljs-attr">mail.smtp.starttls.enable</span>=<span class="hljs-literal">false</span><br><br><span class="hljs-attr">ywt.email.host</span>=mail.xxx.com<br><span class="hljs-attr">ywt.email.port</span>=<span class="hljs-number">25</span><br><span class="hljs-attr">ywt.email.from</span>=zhangianbo@xxx.com<br><span class="hljs-attr">ywt.email.username</span>=xxx<br><span class="hljs-attr">ywt.email.password</span>=yyy<br></code></pre></td></tr></table></figure>

<h3 id="添加maven依赖-poi、javamail"><a href="#添加maven依赖-poi、javamail" class="headerlink" title="添加maven依赖:poi、javamail"></a>添加maven依赖:poi、javamail</h3><h3 id="spring配置文件"><a href="#spring配置文件" class="headerlink" title="spring配置文件"></a>spring配置文件</h3><figure class="highlight dust"><table><tr><td class="code"><pre><code class="hljs dust"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;javaMailSender&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.springframework.mail.javamail.JavaMailSenderImpl&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;javaMailProperties&quot;</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;<span class="hljs-name">props</span>&gt;</span></span><br><span class="xml">                <span class="hljs-tag">&lt;<span class="hljs-name">prop</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;mail.smtp.auth&quot;</span>&gt;</span>$</span><span class="hljs-template-variable">&#123;mail.smtp.auth&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">prop</span>&gt;</span></span><br><span class="xml">                <span class="hljs-tag">&lt;<span class="hljs-name">prop</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;mail.smtp.timeout&quot;</span>&gt;</span>$</span><span class="hljs-template-variable">&#123;mail.smtp.timeout&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">prop</span>&gt;</span></span><br><span class="xml">                <span class="hljs-tag">&lt;<span class="hljs-name">prop</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;mail.smtp.starttls.enable&quot;</span>&gt;</span>$</span><span class="hljs-template-variable">&#123;mail.smtp.starttls.enable&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">prop</span>&gt;</span></span><br><span class="xml">                <span class="hljs-comment">&lt;!-- &lt;prop key=&quot;mail.smtp.socketFactory.class&quot;&gt;javax.net.ssl.SSLSocketFactory&lt;/prop&gt; --&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">props</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span></span><br></code></pre></td></tr></table></figure>

<h3 id="EmailSendDto"><a href="#EmailSendDto" class="headerlink" title="EmailSendDto"></a>EmailSendDto</h3><figure class="highlight haxe"><table><tr><td class="code"><pre><code class="hljs haxe"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * @author zhangjianbo</span><br><span class="hljs-comment"> * @date 2018/2/23</span><br><span class="hljs-comment"> */</span><br>@Data<br>@NoArgsConstructor<br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">EmailSendDto</span> <span class="hljs-keyword"><span class="hljs-keyword">implements</span> <span class="hljs-type">Serializable</span></span></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">String</span> from;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">String</span> to;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">String</span> subject;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">String</span> text;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * zip压缩包文件名</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">String</span> zipFileName;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 是否批量发送</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Boolean isBatch=<span class="hljs-literal">false</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 是否有附件</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Boolean multipart=<span class="hljs-literal">false</span>;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * csv文件名列表</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> List&lt;<span class="hljs-keyword">String</span>&gt; fileNameList=<span class="hljs-keyword">new</span> <span class="hljs-type">ArrayList</span>&lt;&gt;();<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * csv文件表头</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> List&lt;<span class="hljs-keyword">String</span>[]&gt; headerList=<span class="hljs-keyword">new</span> <span class="hljs-type">ArrayList</span>&lt;&gt;();<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * csv文件数据</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> List&lt;List&lt;<span class="hljs-keyword">String</span>[]&gt;&gt; dataList=<span class="hljs-keyword">new</span> <span class="hljs-type">ArrayList</span>&lt;&gt;();<br>&#125;<br></code></pre></td></tr></table></figure>

<h3 id="EmailService"><a href="#EmailService" class="headerlink" title="EmailService"></a>EmailService</h3><figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> zhangjianbo</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@date</span> 2018/2/22</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">EmailService</span> </span>&#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 发送邮件</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> emailSendDto</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function">EmailSendResultDto <span class="hljs-title">send</span><span class="hljs-params">(EmailSendDto emailSendDto)</span></span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h3 id="EmailServiceImpl"><a href="#EmailServiceImpl" class="headerlink" title="EmailServiceImpl"></a>EmailServiceImpl</h3><figure class="highlight reasonml"><table><tr><td class="code"><pre><code class="hljs reasonml"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * @author zhangjianbo</span><br><span class="hljs-comment"> * @date 2018/2/22</span><br><span class="hljs-comment"> */</span><br>@<span class="hljs-constructor">Service(<span class="hljs-string">&quot;emailServiceImpl&quot;</span>)</span><br>public <span class="hljs-keyword">class</span> EmailServiceImpl implements EmailService&#123;<br>    @<span class="hljs-constructor">Resource(<span class="hljs-params">name</span> = <span class="hljs-string">&quot;javaMailSender&quot;</span>)</span><br>    <span class="hljs-keyword">private</span> JavaMailSenderImpl javaMailSender;<br>    @<span class="hljs-constructor">Value(<span class="hljs-string">&quot;$&#123;ywt.email.host&#125;&quot;</span>)</span><br>    <span class="hljs-keyword">private</span> String emailHost;<br>    @<span class="hljs-constructor">Value(<span class="hljs-string">&quot;$&#123;ywt.email.port&#125;&quot;</span>)</span><br>    <span class="hljs-keyword">private</span> String emailPort;<br>    @<span class="hljs-constructor">Value(<span class="hljs-string">&quot;$&#123;ywt.email.username&#125;&quot;</span>)</span><br>    <span class="hljs-keyword">private</span> String userName;<br>    @<span class="hljs-constructor">Value(<span class="hljs-string">&quot;$&#123;ywt.email.password&#125;&quot;</span>)</span><br>    <span class="hljs-keyword">private</span> String password;<br>    @<span class="hljs-constructor">Value(<span class="hljs-string">&quot;$&#123;ywt.email.from&#125;&quot;</span>)</span><br>    <span class="hljs-keyword">private</span> String from;<br><br>    <span class="hljs-keyword">private</span> static final String EXCEL=<span class="hljs-string">&quot;.xls&quot;</span>;<br><br>    @Override<br>    public EmailSendResultDto send(EmailSendDto emailSendDto) &#123;<br>        EmailSendResultDto sendResultDto = <span class="hljs-keyword">new</span> <span class="hljs-constructor">EmailSendResultDto()</span>;<br>        <span class="hljs-keyword">try</span> &#123;<br>            javaMailSender.set<span class="hljs-constructor">Host(<span class="hljs-params">emailHost</span>)</span>;<br>            javaMailSender.set<span class="hljs-constructor">Port(Integer.<span class="hljs-params">valueOf</span>(<span class="hljs-params">emailPort</span>)</span>);<br>            javaMailSender.set<span class="hljs-constructor">Username(<span class="hljs-params">userName</span>)</span>;<br>            javaMailSender.set<span class="hljs-constructor">Password(<span class="hljs-params">password</span>)</span>;<br>            MimeMessage mimeMessage = javaMailSender.create<span class="hljs-constructor">MimeMessage()</span>;<br>            MimeMessageHelper mimeMessageHelper;<br>            <span class="hljs-keyword">if</span> (emailSendDto.get<span class="hljs-constructor">Multipart()</span>) &#123;<br>                mimeMessageHelper = <span class="hljs-keyword">new</span> <span class="hljs-constructor">MimeMessageHelper(<span class="hljs-params">mimeMessage</span>, <span class="hljs-params">true</span>, <span class="hljs-string">&quot;utf-8&quot;</span>)</span>;<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                mimeMessageHelper = <span class="hljs-keyword">new</span> <span class="hljs-constructor">MimeMessageHelper(<span class="hljs-params">mimeMessage</span>, <span class="hljs-params">false</span>, <span class="hljs-string">&quot;utf-8&quot;</span>)</span>;<br>            &#125;<br>            mimeMessageHelper.set<span class="hljs-constructor">From(<span class="hljs-params">from</span>)</span>;<br>            mimeMessageHelper.set<span class="hljs-constructor">To(<span class="hljs-params">emailSendDto</span>.<span class="hljs-params">getTo</span>()</span>);<br>            mimeMessageHelper.set<span class="hljs-constructor">Subject(<span class="hljs-params">emailSendDto</span>.<span class="hljs-params">getSubject</span>()</span>);<br>            mimeMessageHelper.set<span class="hljs-constructor">Text(<span class="hljs-params">emailSendDto</span>.<span class="hljs-params">getText</span>()</span>, <span class="hljs-literal">true</span>);<br><br>            <span class="hljs-keyword">if</span>(!emailSendDto.get<span class="hljs-constructor">Multipart()</span>)&#123;<br>                javaMailSender.send(mimeMessage);<br>                sendResultDto.set<span class="hljs-constructor">SendStatus(EmailSendStatus.SUCCESS)</span>;<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                List&lt;String&gt; tempExcelFilePathList = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;<span class="hljs-literal">()</span>;<br>                File zipFile = null;<br>                File directory =null;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    String directoryPath = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>get<span class="hljs-constructor">Property(<span class="hljs-string">&quot;java.io.tmpdir&quot;</span>)</span> + <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">File</span>.</span></span>separator + <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">UUID</span>.</span></span>random<span class="hljs-constructor">UUID()</span>;<br>                    directory = <span class="hljs-keyword">new</span> <span class="hljs-constructor">File(<span class="hljs-params">directoryPath</span>)</span>;<br>                    <span class="hljs-keyword">if</span> (!directory.exists<span class="hljs-literal">()</span>) &#123;<br>                        directory.mkdir<span class="hljs-literal">()</span>;<br>                    &#125;<br>                    <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; emailSendDto.get<span class="hljs-constructor">HeaderList()</span>.size<span class="hljs-literal">()</span>; i++) &#123;<br>                        String<span class="hljs-literal">[]</span> header = emailSendDto.get<span class="hljs-constructor">HeaderList()</span>.get(i);<br>                        List&lt;String<span class="hljs-literal">[]</span>&gt; dataList = emailSendDto.get<span class="hljs-constructor">DataList()</span>.get(i);<br>                        String excelFileName=emailSendDto.get<span class="hljs-constructor">FileNameList()</span>.get(i);<br>                        <span class="hljs-comment">//1.向临时路径写入excel文件</span><br>                        String excelFilePath = directoryPath + <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">File</span>.</span></span>separator + excelFileName + EXCEL;<br><br>                        <span class="hljs-keyword">try</span> &#123;<br>                            Workbook wb=<span class="hljs-keyword">new</span> <span class="hljs-constructor">HSSFWorkbook()</span>;<br>                            Sheet sheet=wb.create<span class="hljs-constructor">Sheet(<span class="hljs-params">excelFileName</span>)</span>;<br>                            sheet.set<span class="hljs-constructor">DefaultColumnWidth(20)</span>;<br>                            sheet.set<span class="hljs-constructor">DefaultRowHeightInPoints(20)</span>;<br>                            <span class="hljs-comment">//写入表头</span><br>                            Row rowHeader=sheet.create<span class="hljs-constructor">Row(0)</span>;<br>                            <span class="hljs-keyword">for</span>(<span class="hljs-built_in">int</span> k=<span class="hljs-number">0</span>;k&lt;header.length;k++)&#123;<br>                                Cell cell=rowHeader.create<span class="hljs-constructor">Cell(<span class="hljs-params">k</span>)</span>;<br>                                cell.set<span class="hljs-constructor">CellValue(<span class="hljs-params">header</span>[<span class="hljs-params">k</span>])</span>;<br>                            &#125;<br>                            <span class="hljs-comment">//写入内容</span><br>                            <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> t = <span class="hljs-number">0</span>; t &lt; dataList.size<span class="hljs-literal">()</span>; t++) &#123;<br>                                Row rowData=sheet.create<span class="hljs-constructor">Row(<span class="hljs-params">t</span>+1)</span>;<br>                                String<span class="hljs-literal">[]</span> data = dataList.get(t);<br>                                <span class="hljs-keyword">for</span>(<span class="hljs-built_in">int</span> w=<span class="hljs-number">0</span>;w&lt;data.length;w++)&#123;<br>                                    Cell cell=rowData.create<span class="hljs-constructor">Cell(<span class="hljs-params">w</span>)</span>;<br>                                    cell.set<span class="hljs-constructor">CellValue(<span class="hljs-params">data</span>[<span class="hljs-params">w</span>])</span>;<br>                                &#125;<br>                            &#125;<br><br>                            FileOutputStream fileOut=<span class="hljs-keyword">new</span> <span class="hljs-constructor">FileOutputStream(<span class="hljs-params">excelFilePath</span>)</span>;<br>                            wb.write(fileOut);<br>                            fileOut.close<span class="hljs-literal">()</span>;<br><br>                            <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(<span class="hljs-string">&quot;--------EXCEL文件写入成功--------&quot;</span>);<br>                            tempExcelFilePathList.add(excelFilePath);<br>                        &#125; catch (IOException ex) &#123;<br>                            <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(<span class="hljs-string">&quot;--------EXCEL文件写入失败--------&quot;</span>);<br>                            ex.print<span class="hljs-constructor">StackTrace()</span>;<br>                        &#125;<br>                    &#125;<br><br>                    <span class="hljs-keyword">if</span> (tempExcelFilePathList.size<span class="hljs-literal">()</span><span class="hljs-operator"> == </span><span class="hljs-number">1</span>) &#123;<br>                        File file = <span class="hljs-keyword">new</span> <span class="hljs-constructor">File(<span class="hljs-params">tempExcelFilePathList</span>.<span class="hljs-params">get</span>(0)</span>);<br>                        mimeMessageHelper.add<span class="hljs-constructor">Attachment(MimeUtility.<span class="hljs-params">encodeWord</span>(<span class="hljs-params">emailSendDto</span>.<span class="hljs-params">getFileNameList</span>()</span>.get(<span class="hljs-number">0</span>))+EXCEL, file);<br>                    &#125; <span class="hljs-keyword">else</span> &#123;<br>                        String zipFileName = emailSendDto.get<span class="hljs-constructor">ZipFileName()</span>;<br>                        ZipOutputStream outStream = <span class="hljs-keyword">new</span> <span class="hljs-constructor">ZipOutputStream(<span class="hljs-params">new</span> FileOutputStream(<span class="hljs-params">zipFileName</span>)</span>);<br>                        <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> n = <span class="hljs-number">0</span>; n &lt; tempExcelFilePathList.size<span class="hljs-literal">()</span>; n++) &#123;<br>                            String csvPath = tempExcelFilePathList.get(n);<br>                            File file = <span class="hljs-keyword">new</span> <span class="hljs-constructor">File(<span class="hljs-params">csvPath</span>)</span>;<br>                            FileInputStream inStream = <span class="hljs-keyword">new</span> <span class="hljs-constructor">FileInputStream(<span class="hljs-params">file</span>)</span>;<br>                            outStream.put<span class="hljs-constructor">NextEntry(<span class="hljs-params">new</span> ZipEntry(<span class="hljs-params">emailSendDto</span>.<span class="hljs-params">getFileNameList</span>()</span>.get(n)));<br><br>                            byte<span class="hljs-literal">[]</span> buffer = <span class="hljs-keyword">new</span> byte<span class="hljs-literal">[<span class="hljs-number">1024</span>]</span>;<br>                            <span class="hljs-built_in">int</span> bytesRead;<br><br>                            <span class="hljs-keyword">while</span> ((bytesRead = inStream.read(buffer)) &gt; <span class="hljs-number">0</span>) &#123;<br>                                outStream.write(buffer, <span class="hljs-number">0</span>, bytesRead);<br>                            &#125;<br>                            inStream.close<span class="hljs-literal">()</span>;<br>                        &#125;<br>                        outStream.close<span class="hljs-constructor">Entry()</span>;<br>                        outStream.close<span class="hljs-literal">()</span>;<br><br>                        zipFile = <span class="hljs-keyword">new</span> <span class="hljs-constructor">File(<span class="hljs-params">zipFileName</span>)</span>;<br>                        mimeMessageHelper.add<span class="hljs-constructor">Attachment(MimeUtility.<span class="hljs-params">encodeWord</span>(<span class="hljs-params">zipFileName</span>)</span>, zipFile);<br>                    &#125;<br>                    javaMailSender.send(mimeMessage);<br>                    sendResultDto.set<span class="hljs-constructor">SendStatus(EmailSendStatus.SUCCESS)</span>;<br>                &#125; catch (IOException ex) &#123;<br>                    sendResultDto.set<span class="hljs-constructor">SendStatus(EmailSendStatus.FAIL)</span>;<br>                    sendResultDto.set<span class="hljs-constructor">ErrMsg(<span class="hljs-params">ex</span>.<span class="hljs-params">getMessage</span>()</span>);<br>                &#125; finally &#123;<br>                    <span class="hljs-comment">//3.删除临时文件</span><br>                    <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> m = <span class="hljs-number">0</span>; m &lt; tempExcelFilePathList.size<span class="hljs-literal">()</span>; m++) &#123;<br>                        File file = <span class="hljs-keyword">new</span> <span class="hljs-constructor">File(<span class="hljs-params">tempExcelFilePathList</span>.<span class="hljs-params">get</span>(<span class="hljs-params">m</span>)</span>);<br>                        <span class="hljs-keyword">if</span> (file.exists<span class="hljs-literal">()</span><span class="hljs-operator"> &amp;&amp; </span>file.is<span class="hljs-constructor">File()</span>) &#123;<br>                            <span class="hljs-keyword">try</span> &#123;<br>                                file.delete<span class="hljs-literal">()</span>;<br>                            &#125; catch (Exception e) &#123;<br>                                <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(<span class="hljs-string">&quot;删除csv临时文件失败&quot;</span>);<br>                            &#125;<br>                        &#125;<br>                    &#125;<br>                    <span class="hljs-keyword">if</span> (zipFile != null) &#123;<br>                        <span class="hljs-keyword">try</span> &#123;<br>                            zipFile.delete<span class="hljs-literal">()</span>;<br>                        &#125; catch (Exception ex) &#123;<br>                            <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(<span class="hljs-string">&quot;删除zip临时文件失败&quot;</span>);<br>                        &#125;<br>                    &#125;<br>                    <span class="hljs-keyword">if</span>(directory!=null) &#123;<br>                        <span class="hljs-keyword">try</span> &#123;<br>                            directory.delete<span class="hljs-literal">()</span>;<br>                        &#125; catch (Exception ex) &#123;<br>                            <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(<span class="hljs-string">&quot;删除临时目录失败&quot;</span>);<br>                        &#125;<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125; catch (MessagingException e) &#123;<br>            sendResultDto.set<span class="hljs-constructor">SendStatus(EmailSendStatus.FAIL)</span>;<br>            sendResultDto.set<span class="hljs-constructor">ErrMsg(<span class="hljs-params">e</span>.<span class="hljs-params">getMessage</span>()</span>);<br>        &#125; catch (Exception ex2) &#123;<br>            sendResultDto.set<span class="hljs-constructor">SendStatus(EmailSendStatus.FAIL)</span>;<br>            sendResultDto.set<span class="hljs-constructor">ErrMsg(<span class="hljs-params">ex2</span>.<span class="hljs-params">getMessage</span>()</span>);<br>        &#125;<br>        return sendResultDto;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>

<h3 id="调用Example"><a href="#调用Example" class="headerlink" title="调用Example"></a>调用Example</h3><figure class="highlight reasonml"><table><tr><td class="code"><pre><code class="hljs reasonml">EmailSendDto sendDto=<span class="hljs-keyword">new</span> <span class="hljs-constructor">EmailSendDto()</span>;<br><span class="hljs-comment">//邮件主题</span><br>sendDto.set<span class="hljs-constructor">Subject(<span class="hljs-string">&quot;XXX-报表&quot;</span>)</span>;<br><span class="hljs-comment">//邮件内容</span><br>sendDto.set<span class="hljs-constructor">Text(<span class="hljs-string">&quot;XXX-报表&quot;</span>)</span>;<br><span class="hljs-comment">//附件名称列表</span><br>sendDto.get<span class="hljs-constructor">FileNameList()</span>.add(<span class="hljs-string">&quot;XXX-报表&quot;</span>);<br><span class="hljs-comment">//附件表头</span><br>sendDto.get<span class="hljs-constructor">HeaderList()</span>.add(<span class="hljs-keyword">new</span> String<span class="hljs-literal">[]</span>&#123;<span class="hljs-string">&quot;姓名&quot;</span>,<span class="hljs-string">&quot;年龄&quot;</span>,<span class="hljs-string">&quot;性别&quot;</span>&#125;);<br><span class="hljs-comment">//附件数据（与/附件名称/表头要一一对应）</span><br>List&lt;String<span class="hljs-literal">[]</span>&gt; dataList=<span class="hljs-keyword">new</span> <span class="hljs-constructor">ArrayList()</span>;<span class="hljs-comment">//获取具体数据</span><br>  <br>sendDto.get<span class="hljs-constructor">DataList()</span>.add(dataList);<br><br>Boolean res=emailService.send(sendDto,currentSalesman);<br><span class="hljs-keyword">if</span>(res)&#123;<br>    return <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">ResultWrapperFactory</span>.</span></span><span class="hljs-keyword">to</span><span class="hljs-constructor">Success(<span class="hljs-string">&quot;发送成功&quot;</span>)</span>;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    return <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">ResultWrapperFactory</span>.</span></span><span class="hljs-keyword">to</span><span class="hljs-constructor">Error(<span class="hljs-string">&quot;发送失败&quot;</span>)</span>;<br>&#125;<br></code></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>jQuery QRcode</title>
    <url>/2017/06/05/jquery-qrcode/</url>
    <content><![CDATA[<p>jquery.qrcode.js 是一个能够在客户端生成矩阵二维码QRCode 的jquery插件 ,使用它可以很方便的在页面上生成二维条码。</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="引用jquery-jquery-qrcode"><a href="#引用jquery-jquery-qrcode" class="headerlink" title="引用jquery,jquery-qrcode"></a>引用jquery,jquery-qrcode</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><code class="hljs markdown"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../../scripts/jquery-1.10.1.min.js&quot;</span>&gt;</span></span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../../scripts/jquery.qrcode.min.js&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span></span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure>
<h3 id="定义div"><a href="#定义div" class="headerlink" title="定义div"></a>定义div</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><code class="hljs markdown"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;code&quot;</span>&gt;</span></span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br></code></pre></td></tr></table></figure>
<h3 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><code class="hljs markdown">function showQRCodeDiv() &#123;<br><span class="hljs-code">    var row = mastergrid.getRowByUID(row_uid);</span><br><span class="hljs-code">    $(&quot;#code&quot;).text(&quot;&quot;).qrcode(&#123;</span><br><span class="hljs-code">        render: &quot;canvas&quot;, //table/canvas方式</span><br><span class="hljs-code">        width: 228, //宽度</span><br><span class="hljs-code">        height:228, //高度</span><br><span class="hljs-code">        text: utf16to8(‘测试’) //二维码</span><br><span class="hljs-code">    &#125;);</span><br><span class="hljs-code">&#125;</span><br><span class="hljs-code"></span><br>function utf16to8(str) &#123;<br><span class="hljs-code">    var out, i, len, c;</span><br><span class="hljs-code">    out = &quot;&quot;;</span><br><span class="hljs-code">    len = str.length;</span><br><span class="hljs-code">    for(i = 0; i &lt; len; i++) &#123;</span><br><span class="hljs-code">        c = str.charCodeAt(i);</span><br><span class="hljs-code">        if ((c &gt;= 0x0001) &amp;&amp; (c &lt;= 0x007F)) &#123;</span><br><span class="hljs-code">            out += str.charAt(i);</span><br><span class="hljs-code">        &#125; else if (c &gt; 0x07FF) &#123;</span><br><span class="hljs-code">            out += String.fromCharCode(0xE0 | ((c &gt;&gt; 12) &amp; 0x0F));</span><br><span class="hljs-code">            out += String.fromCharCode(0x80 | ((c &gt;&gt;  6) &amp; 0x3F));</span><br><span class="hljs-code">            out += String.fromCharCode(0x80 | ((c &gt;&gt;  0) &amp; 0x3F));</span><br><span class="hljs-code">        &#125; else &#123;</span><br><span class="hljs-code">            out += String.fromCharCode(0xC0 | ((c &gt;&gt;  6) &amp; 0x1F));</span><br><span class="hljs-code">            out += String.fromCharCode(0x80 | ((c &gt;&gt;  0) &amp; 0x3F));</span><br><span class="hljs-code">        &#125;</span><br><span class="hljs-code">    &#125;</span><br><span class="hljs-code">    return out;</span><br><span class="hljs-code">&#125;</span><br><span class="hljs-code"></span><br>function saveQRCodeDiv() &#123;<br><span class="hljs-code">    var myCanvas = $(&quot;canvas&quot;)[0];</span><br><span class="hljs-code">    var image = myCanvas.toDataURL(&quot;image/png&quot;).replace(&quot;image/png&quot;, &quot;image/octet-stream&quot;);</span><br><span class="hljs-code"></span><br><span class="hljs-code">    var link = document.createElement(&#x27;a&#x27;);</span><br><span class="hljs-code">    link.href = image;</span><br><span class="hljs-code">    var filename = mini.get(&quot;bqcode_2&quot;).getValue() + &#x27;.png&#x27;;</span><br><span class="hljs-code">    link.download = filename;</span><br><span class="hljs-code">    var event = document.createEvent(&#x27;MouseEvents&#x27;);</span><br><span class="hljs-code">    event.initMouseEvent(&#x27;click&#x27;, true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);</span><br><span class="hljs-code">    link.dispatchEvent(event);</span><br><span class="hljs-code">&#125;</span><br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>jQuery</tag>
      </tags>
  </entry>
  <entry>
    <title>MyLove</title>
    <url>/2021/05/12/mylove/</url>
    <content><![CDATA[<p><img src="/assets/photo/love.jpg" alt="MyLove"></p>
]]></content>
      <categories>
        <category>照片</category>
      </categories>
      <tags>
        <tag>MyLove</tag>
      </tags>
  </entry>
  <entry>
    <title>张煦涵</title>
    <url>/2021/05/12/zhangxuhan/</url>
    <content><![CDATA[<p><img src="/assets/photo/IMG_20170924_083913.jpg" alt="MyLove"></p>
<p><img src="/assets/photo/IMG_20170924_180334_HHT.jpg" alt="MyLove"></p>
]]></content>
      <categories>
        <category>照片</category>
      </categories>
      <tags>
        <tag>MyBaby</tag>
      </tags>
  </entry>
  <entry>
    <title>张子宸</title>
    <url>/2021/05/12/zhangzichen/</url>
    <content><![CDATA[<p><img src="/assets/photo/IMG_20170924_083913.jpg" alt="MyLove"></p>
<p><img src="/assets/photo/IMG_20170924_180334_HHT.jpg" alt="MyLove"></p>
]]></content>
      <categories>
        <category>照片</category>
      </categories>
      <tags>
        <tag>MyBaby</tag>
      </tags>
  </entry>
  <entry>
    <title>select2</title>
    <url>/2017/12/03/select2/</url>
    <content><![CDATA[<p>Select2 提供了一个可自定义的选择框，该框支持搜索、标记、远程数据集、无限滚动以及许多其他常用选项。</p>
<p>Select2 是基于 jQuery 的选择框的替代品。它支持搜索，远程数据集和结果分页。</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="引用jquery-select2"><a href="#引用jquery-select2" class="headerlink" title="引用jquery,select2"></a>引用jquery,select2</h3><figure class="highlight xml"><table><tr><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../../scripts/jquery-1.10.1.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../../scripts/select2/js/select2.full.min.js&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../../scripts/select2/js/i18n/zh-CN.js&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure>
<h3 id="定义需要绑定的select"><a href="#定义需要绑定的select" class="headerlink" title="定义需要绑定的select"></a>定义需要绑定的select</h3><figure class="highlight routeros"><table><tr><td class="code"><pre><code class="hljs routeros">&lt;select <span class="hljs-attribute">id</span>=<span class="hljs-string">&quot;wlxx&quot;</span> <span class="hljs-attribute">class</span>=<span class="hljs-string">&quot;form-control&quot;</span> <span class="hljs-attribute">name</span>=<span class="hljs-string">&quot;wlxx&quot;</span> <span class="hljs-attribute">style</span>=<span class="hljs-string">&quot;max-width: 150px; width: 150px;&quot;</span>&gt;&lt;/select&gt;<br></code></pre></td></tr></table></figure>
<h3 id="js调用"><a href="#js调用" class="headerlink" title="js调用"></a>js调用</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><code class="hljs markdown">$(&quot;#wlxx&quot;).select2(&#123;<br><span class="hljs-code">    placeholder:&quot;&quot;,</span><br><span class="hljs-code">    minimumInputLength: 1,</span><br><span class="hljs-code">    maximumInputLength:100,</span><br><span class="hljs-code">    allowClear:true,</span><br><span class="hljs-code">    width:300,</span><br><span class="hljs-code">    language: &quot;zh-CN&quot;,</span><br><span class="hljs-code">    ajax: &#123;</span><br><span class="hljs-code">        url: &#x27;./qrcode!searchWlxx.action&#x27;,</span><br><span class="hljs-code">        contentType : &quot;application/json&quot;,</span><br><span class="hljs-code">        dataType: &#x27;json&#x27;,</span><br><span class="hljs-code">        type:&#x27;get&#x27;,</span><br><span class="hljs-code">        delay: 500,</span><br><span class="hljs-code">        async:false,</span><br><span class="hljs-code">        timeout : 3000, //超时时间设置，单位毫秒</span><br><span class="hljs-code">        data: function (params) &#123;</span><br><span class="hljs-code">            return &#123;</span><br><span class="hljs-code">                queryStr:encodeURI(encodeURI(params.term).replace(/\+/g,&#x27;%2B&#x27;)),</span><br><span class="hljs-code">                pageIndex:params.page,</span><br><span class="hljs-code">                pageSize:10</span><br><span class="hljs-code">            &#125;</span><br><span class="hljs-code">        &#125;,</span><br><span class="hljs-code">        processResults: function (data,params) &#123;</span><br><span class="hljs-code">            params.page = params.page || 1;</span><br><span class="hljs-code">            var results = [];</span><br><span class="hljs-code">            $.each(data.list, function (i, v) &#123;</span><br><span class="hljs-code">                var o = &#123;&#125;;</span><br><span class="hljs-code">                o.id = v.wlxxid;</span><br><span class="hljs-code">                o.text=v.wlmc;</span><br><span class="hljs-code">                o.wlxxid=v.wlxxid;</span><br><span class="hljs-code">                o.wlmc = v.wlmc;</span><br><span class="hljs-code">                o.wlbh=v.wlbh;</span><br><span class="hljs-code">                results.push(o);</span><br><span class="hljs-code">            &#125;);</span><br><span class="hljs-code">            return &#123;</span><br><span class="hljs-code">                results: results,</span><br><span class="hljs-code">                pagination: &#123;</span><br><span class="hljs-code">                    more: (params.page * 10) &lt; data.total //每页10条数据</span><br><span class="hljs-code">                &#125;</span><br><span class="hljs-code">            &#125;;</span><br><span class="hljs-code">        &#125;,</span><br><span class="hljs-code">        cache: true</span><br><span class="hljs-code">    &#125;,</span><br><span class="hljs-code">    escapeMarkup: function (markup) &#123; return markup; &#125;,</span><br><span class="hljs-code">    templateResult: function formatRepo(repo)&#123;</span><br><span class="hljs-code">        if(!repo.id)&#123;</span><br><span class="hljs-code">            return &quot;加载中...&quot;;</span><br><span class="hljs-code">        &#125;</span><br><span class="hljs-code">        return &#x27;&lt;span style=&quot;color:black;font-weight:bold;&quot;&gt;&#x27; + repo.wlmc + &#x27;&lt;/span&gt;&lt;/br&gt;&lt;span&gt; 编号：&#x27; + repo.wlbh + &#x27;&lt;/span&gt; &#x27;&#125;,</span><br><span class="hljs-code">    templateSelection: function formatRepoSelection(repo, container)&#123;</span><br><span class="hljs-code">        if(!repo.id)&#123;</span><br><span class="hljs-code">            return &quot;请选择商品&quot;;</span><br><span class="hljs-code">        &#125;</span><br><span class="hljs-code">        return repo.text</span><br><span class="hljs-code">    &#125;</span><br><span class="hljs-code">&#125;);</span><br></code></pre></td></tr></table></figure>
<h3 id="要求的JSON格式"><a href="#要求的JSON格式" class="headerlink" title="要求的JSON格式:"></a>要求的JSON格式:</h3><figure class="highlight json"><table><tr><td class="code"><pre><code class="hljs json">&#123;<br>    <span class="hljs-attr">&quot;total&quot;</span>:<span class="hljs-number">6381</span>,<br>    <span class="hljs-attr">&quot;list&quot;</span>:[<br>        &#123;<span class="hljs-attr">&quot;wlxxid&quot;</span>:<span class="hljs-string">&quot;WLXX20140505092138953&quot;</span>,<span class="hljs-attr">&quot;wlbh&quot;</span>:<span class="hljs-string">&quot;03010109906018750201&quot;</span>,<span class="hljs-attr">&quot;wlmc&quot;</span>:<span class="hljs-string">&quot;12.00-20-20PR[M9088]GOODRIDE(好运)&quot;</span>,<span class="hljs-attr">&quot;RN&quot;</span>:<span class="hljs-number">1</span>&#125;,<br>        &#123;<span class="hljs-attr">&quot;wlxxid&quot;</span>:<span class="hljs-string">&quot;WLXX20140731150150987&quot;</span>,<span class="hljs-attr">&quot;wlbh&quot;</span>:<span class="hljs-string">&quot;03010437201037100201&quot;</span>,<span class="hljs-attr">&quot;wlmc&quot;</span>:<span class="hljs-string">&quot;165/60R14PR[RP28]H GOODRIDE(好运)无内&quot;</span>,<span class="hljs-attr">&quot;RN&quot;</span>:<span class="hljs-number">10</span>&#125;<br>    ]<br>&#125;<br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>select2</tag>
      </tags>
  </entry>
</search>
